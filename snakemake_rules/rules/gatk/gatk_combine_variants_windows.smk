# -*- snakemake -*-
include: "gatk.settings.smk"
include: "../pybedtools/pybedtools_make_bed_windows.rule"
include: "../htslib/htslib_bgzip.rule"
include: "../samtools/samtools_tabix_vcf.rule"

config_default = {'gatk' :{'combine_target_variants': _gatk_config_rule_default.copy()}}
config_default['gatk']['combine_target_variants'].update({'options' : "--genotypemergeoption UNSORTED"})


update_config(config_default, config)
config = config_default

cmd = re.sub("-Xmx[0-9a-zA-Z]+", "-Xmx{mem}".format(mem=config['gatk']['java_mem']), config['gatk']['cmd'])


rule gatk_combine_variants_windows:
    """Combine variants from windows using CombineVariants.

    Combines variant files that result from partitioned variant
    calling, windowing version. Typically, subregions are generated by
    the pybedtools_make_bed_windows rule from a bed file with all
    target regions. The application wildcard is the application used.
    The partition wildcard is an integer that simply labels each
    single subregion bed file.

    The output file is tagged with ".window-combined.vcf.gz".

    As an example, the output all.application.window-combined.g.vcf.gz will
    be generated from files all.application.window-1.g.vcf.gz,
    all.application.window-2.g.vcf.gz etc.

    """
    wildcard_constraints:
        vcf = "(.g.vcf|.vcf)",
        application = "(freebayes|bcftools|haplotype_caller)",
    params:  cmd = cmd + " -T " + COMBINE_VARIANTS,
             options = " ".join(["-R", config['gatk']['ref'],
                                 config['gatk']['combine_target_variants']['options']]),
             runtime = config['gatk']['combine_target_variants']['runtime']
    input: vcf = ["{{prefix}}.{{application}}.window-{partition}.vcf.gz".format(partition=p+1) for p in range(config['pybedtools']['make_bed_windows']['partitions'])],
           tbi = ["{{prefix}}.{{application}}.window-{partition}.vcf.gz.tbi".format(partition=p+1) for p in range(config['pybedtools']['make_bed_windows']['partitions'])]
    output: vcf = "{prefix}.{application}.window-combined.vcf.gz"
    threads: config['gatk']['combine_target_variants']['threads']
    shell:  "command=\"{params.cmd} {params.options} $(echo {input.vcf} | sed -e 's/[^ ][^ ]*/-V &/g') -o {output.vcf}\"; eval \"${{command}}\""
