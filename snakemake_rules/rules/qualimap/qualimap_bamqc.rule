# -*- snakemake -*-
include: "qualimap.settings"

config_default = {
    'qualimap' : {
        'bamqc' : {
            'options' : [],
            'threads' : 4,
            'runtime' : '01:00:00'
        },
    },
}

update_config(config_default, config)
config = config_default


_qualimap_output = {
    'se' : {
        'genome_results': "{prefix}.bam.{end}.qualimap/genome_results.txt",
        'coverage_across_reference': "{prefix}.bam.{end}.qualimap/raw_data_qualimapReport/coverage_across_reference.txt",
        'coverage_histogram': "{prefix}.bam.{end}.qualimap/raw_data_qualimapReport/coverage_histogram.txt",
        'duplication_rate_histogram': "{prefix}.bam.{end}.qualimap/raw_data_qualimapReport/duplication_rate_histogram.txt",
        'genome_fraction_coverage': "{prefix}.bam.{end}.qualimap/raw_data_qualimapReport/genome_fraction_coverage.txt",
        'homopolymer_indels': "{prefix}.bam.{end}.qualimap/raw_data_qualimapReport/homopolymer_indels.txt",
        'mapped_reads_clipping_profile': "{prefix}.bam.{end}.qualimap/raw_data_qualimapReport/mapped_reads_clipping_profile.txt",
        'mapped_reads_gc-content_distribution': "{prefix}.bam.{end}.qualimap/raw_data_qualimapReport/mapped_reads_gc-content_distribution.txt",
        'mapped_reads_nucleotide_content': "{prefix}.bam.{end}.qualimap/raw_data_qualimapReport/mapped_reads_nucleotide_content.txt",
        'mapping_quality_across_reference': "{prefix}.bam.{end}.qualimap/raw_data_qualimapReport/mapping_quality_across_reference.txt",
        'mapping_quality_histogram': "{prefix}.bam.{end}.qualimap/raw_data_qualimapReport/mapping_quality_histogram.txt",
        },
}

_qualimap_output['pe'] = _qualimap_output['se']
_qualimap_output['pe'].update({
    'insert_size_across_reference': "{prefix}.bam.{end}.qualimap/raw_data_qualimapReport/insert_size_across_reference.txt",
    'insert_size_histogram': "{prefix}.bam.{end}.qualimap/raw_data_qualimapReport/insert_size_histogram.txt",
})


rule qualimap_bamqc:
    """Qualimap: run bamqc on bam file"""
    wildcard_constraints:
        end = "(se|pe)"
    params: cmd = config['qualimap']['cmd'],
            options = " ".join(config['qualimap']['bamqc']['options'] +
                               [" --java-mem-size={}".format(available_mem(config['qualimap']['bamqc']['threads'],
                                                                           config['qualimap']['java_mem']))]),
            runtime = config['qualimap']['bamqc']['runtime']
    input: bam = "{prefix}.bam"
    output: html = os.path.join("{prefix}.bam.{end}.qualimap", "qualimapReport.html"),
            genome = os.path.join("{prefix}.bam.{end}.qualimap", "genome_results.txt"),
            outdir = "{prefix}.bam.{end}.qualimap"
    threads: config['qualimap']['bamqc']['threads']
    conda: "env.yaml"
    shell: "unset DISPLAY; {params.cmd} bamqc -bam {input.bam} -nt {threads} {params.options} -outdir {output.outdir}"

