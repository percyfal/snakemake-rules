# -*- snakemake -*-
include: 'mapdamage2.settings'

folder = "mapdamage2"
m = re.search("(?P<opt>-d|--folder)\s+(?P<folder>.*)", config["mapdamage2"]["options"])
if m:
    folder = m.group("folder")
    opt = m.group("opt")
    config["mapdamage2"]["options"] = re.sub(opt, "", config["mapdamage2"]["options"])
    config["mapdamage2"]["options"] = re.sub(folder, "", config["mapdamage2"]["options"])


rescalebam = None
m = re.search("(?P<rescalebam>--rescale-out\s+[\w\.]+)", config["mapdamage2"]["options"])
if m:
    logger.warning("--rescale-out given in option string; replacing with prefix based name")
    rescalebam = m.group("rescalebam")
    config["mapdamage2"]["options"] = re.sub(rescalebam, "", config["mapdamage2"]["options"])

rescale = False
m = re.search("(--rescale\s+)", config["mapdamage2"]["options"])
if rescalebam and not m:
    config["mapdamage2"]["options"] += " --rescale "
    rescale = True
elif m:
    rescale = True


stats = True
m = re.search("(--no-stats)", config["mapdamage2"]["options"])
if m:
    stats = False


rule mapdamage2:
    """mapdamage2

    Run mapdamage2. Produces 16 output files.
    """
    version: "0.2"
    params: options = config["mapdamage2"]["options"],
            runtime = config["mapdamage2"]["runtime"]
    input: bam = "{prefix}.bam", ref = config["mapdamage2"]["ref"]
    output: log = join("{prefix}" + "_" + folder, "Runtime_log.txt"),
            fragmisincorporation = join("{prefix}"+ "_" + folder, "Fragmisincorporation_plot.pdf"),
            misincorporation = join("{prefix}"+ "_" + folder, "misincorporation.txt"),
            CtoT = join("{prefix}"+ "_" + folder, "5pCtoT_freq.txt"),
            GtoA = join("{prefix}"+ "_" + folder, "3pGtoA_freq.txt"),
            dnacomp = join("{prefix}"+ "_" + folder, "dnacomp.txt"),
            lgdist = join("{prefix}"+ "_" + folder, "lgdistribution.txt"),
            extraout = [join("{prefix}"+ "_" + folder, "Stats_out_MCMC_hist.pdf"),
                           join("{prefix}"+ "_" + folder, "Stats_out_MCMC_iter.csv"),
                           join("{prefix}"+ "_" + folder, "Stats_out_MCMC_trace.pdf"),
                           join("{prefix}"+ "_" + folder, "Stats_out_MCMC_iter_summ_stat.csv"),
                           join("{prefix}"+ "_" + folder, "Stats_out_MCMC_post_pred.pdf"),
                           join("{prefix}"+ "_" + folder, "Stats_out_MCMC_correct_prob.csv"),
                           join("{prefix}"+ "_" + folder, "dnacomp_genome.csv")] if stats else [] + 
                        [join("{prefix}"+ "_" + folder, "{prefix}.rescaled.bam")] if rescalebam else [],
    threads: config["mapdamage2"]["threads"]
    conda: "env.yaml"
    run:
        cmd = "mapDamage " + params.options + " -i " + input.bam + " -r " + input.ref + " -d " + "{}_{}".format(wildcards.prefix, folder)
        if rescale:
            cmd = cmd + " --rescale-out " + str(output.rescale_bam)
        shell(cmd)
