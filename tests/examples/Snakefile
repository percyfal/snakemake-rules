# -*- snakemake -*-
from os.path import join
from snakemake.utils import set_temporary_output, update_config
from snakemake_rules import SNAKEMAKE_RULES_PATH

workdir: join(SNAKEMAKE_RULES_PATH, "tests")

def merge_inputs(wildcards):
    return [wildcards.prefix + "1.bam", wildcards.prefix + "2.bam"]

config = {'bio.ngs.qc.picard': {'merge_sam': {'inputfun': merge_inputs}}}

configfile: join(SNAKEMAKE_RULES_PATH, "tests", "config.yaml")

rule all:
    input: "data/test.sort.rg.dup.realign.recal.annotated.vcf"


include: join(SNAKEMAKE_RULES_PATH, "bio/ngs/align/bwa.rules")
include: join(SNAKEMAKE_RULES_PATH, "bio/ngs/align/star.rules")
include: join(SNAKEMAKE_RULES_PATH, "bio/ngs/tools/samtools.rules")
include: join(SNAKEMAKE_RULES_PATH, "bio/ngs/tools/bamtools.rules")
include: join(SNAKEMAKE_RULES_PATH, "bio/ngs/tools/gatk.rules")
include: join(SNAKEMAKE_RULES_PATH, "bio/ngs/qc/picard.rules")
include: join(SNAKEMAKE_RULES_PATH, "bio/ngs/variation/snpeff.rules")

set_temporary_output(*[workflow.get_rule(x) for x in config['settings']['temporary_rules']])


ruleorder: snpeff_annotate_variants > gatk_unified_genotyper
